'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';
import ImageInput from '@/components/ImageInput';
import StoryControls from '@/components/StoryControls';
import ImagePreview from '@/components/ImagePreview';
import StoryDisplay from '@/components/StoryDisplay';
import { Card } from '@/components/ui/card';

export interface StorySettings {
  style: string;
  tone: string;
  length: number;
  hints: string;
}

export default function Home() {
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [imageSource, setImageSource] = useState<'upload' | 'url' | 'gallery' | null>(null);
  const [story, setStory] = useState<string | null>(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [storySettings, setStorySettings] = useState<StorySettings>({
    style: 'Literary',
    tone: 'Neutral',
    length: 300,
    hints: ''
  });

  const handleImageSelect = (imageUrl: string, source: 'upload' | 'url' | 'gallery') => {
    setSelectedImage(imageUrl);
    setImageSource(source);
    setStory(null); // Clear previous story when new image is selected
  };

  const handleGenerateStory = async () => {
    if (!selectedImage) return;

    setIsGenerating(true);
    try {
      const response = await fetch('/api/generate-story', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          imageUrl: selectedImage,
          imageSource,
          settings: storySettings,
        }),
      });

      if (!response.ok) {
        throw new Error('Failed to generate story');
      }

      const data = await response.json();
      setStory(data.story);
    } catch (error) {
      console.error('Error generating story:', error);
      // TODO: Add proper error handling
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <main className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-6xl font-bold text-white mb-4">
            Image to Story
          </h1>
          <p className="text-slate-300 text-lg md:text-xl max-w-2xl mx-auto">
            Transform any image into a captivating story with AI. Upload, paste, or explore our gallery to begin your creative journey.
          </p>
        </div>

        {/* Main Content */}
        <div className="grid lg:grid-cols-2 gap-8 max-w-7xl mx-auto">
          {/* Left Panel - Controls */}
          <div className="space-y-6">
            <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20">
              <h2 className="text-2xl font-semibold text-white mb-4">Choose Your Image</h2>
              <ImageInput onImageSelect={handleImageSelect} />
            </Card>

            <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20">
              <h2 className="text-2xl font-semibold text-white mb-4">Story Settings</h2>
              <StoryControls 
                settings={storySettings}
                onSettingsChange={setStorySettings}
                onGenerate={handleGenerateStory}
                isGenerating={isGenerating}
                hasImage={!!selectedImage}
              />
            </Card>
          </div>

          {/* Right Panel - Preview & Story */}
          <div className="space-y-6">
            <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20">
              <h2 className="text-2xl font-semibold text-white mb-4">Image Preview</h2>
              <ImagePreview imageUrl={selectedImage} />
            </Card>

            <Card className="p-6 bg-white/10 backdrop-blur-sm border-white/20">
              <h2 className="text-2xl font-semibold text-white mb-4">Generated Story</h2>
              <StoryDisplay 
                story={story} 
                isGenerating={isGenerating}
                settings={storySettings}
              />
            </Card>
          </div>
        </div>
      </div>
    </main>
  );
}
